{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/http-status-code",
    "result": {"data":{"post":{"slug":"/http-status-code","title":"Understanding HTTP Status Codes","date":"18.03.2023","tags":[{"name":"Server","slug":"server"},{"name":"Web","slug":"web"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"http-status-code\",\n  \"title\": \"Understanding HTTP Status Codes\",\n  \"date\": \"2023-03-18T00:00:00.000Z\",\n  \"tags\": [\"Server\", \"Web\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When working with HTTP to build a server, I can't ignore status codes. These code are used in RESTful APIs to indicate the status of a request. By understanding the meaning of each status code, clients can better handle server responses and take appropriate action.\"), mdx(\"h3\", null, \"Here are the list of most commonly used HTTP status codes:\"), mdx(\"p\", null, \"1xx (Informational): Request received and processing is continuing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"100 (Continue)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"101 (Switching Protocols)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"102 (Processing)\")), mdx(\"p\", null, \"2xx (Successful): The request was successfully received, understood, and accepted\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"200 (OK)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"201 (Created)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"202 (Accepted)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"203 (Non-Authoritative Information)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"204 (No Content)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"205 (Reset Content)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"206 (Partial Content)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"207 (Multi-Status)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"208 (Already Reported)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"226 (IM Used)\")), mdx(\"p\", null, \"3xx (Redirection): The client must take some additional action to complete the request\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"300 (Multiple Choices)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"301 (Moved Permanently)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"302 (Found)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"303 (See Other)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"304 (Not Modified)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"305 (Use Proxy)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"306 (Switch Proxy)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"307 (Temporary Redirect)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"308 (Permanent Redirect)\")), mdx(\"p\", null, \"4xx (Client Error): The request contains bad syntax or cannot be fulfilled\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"400 (Bad Request)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"401 (Unauthorized)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"402 (Payment Required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"403 (Forbidden)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"404 (Not Found)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"405 (Method Not Allowed)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"406 (Not Acceptable)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"407 (Proxy Authentication Required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"408 (Request Timeout)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"409 (Conflict)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"410 (Gone)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"411 (Length Required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"412 (Precondition Failed)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"413 (Payload Too Large)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"414 (URI Too Long)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"415 (Unsupported Media Type)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"416 (Range Not Satisfiable)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"417 (Expectation Failed)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"418 (I'm a teapot)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"421 (Misdirected Request)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"422 (Unprocessable Entity)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"423 (Locked)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"424 (Failed Dependency)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"425 (Too Early)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"426 (Upgrade Required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"428 (Precondition Required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"429 (Too Many Requests)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"431 (Request Header Fields Too Large)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"444 (Connection Closed Without Response)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"451 (Unavailable For Legal Reasons)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"499 (Client Closed Request)\")), mdx(\"p\", null, \"5xx (Server Error): The server failed to fulfill an apparently valid request\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"500 (Internal Server Error)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"501 (Not Implemented)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"502 (Bad Gateway)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"503 (Service Unavailable)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"504 (Gateway Timeout)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"505 (HTTP Version Not Supported)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"506 (Variant Also Negotiates)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"507 (Insufficient Storage)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"508 (Loop Detected)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"510 (Not Extended)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"511 (Network Authentication Required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"599 (Network Connect Timeout Error)\")), mdx(\"h3\", null, \"References:\"), mdx(\"p\", null, \"(Mozilla Resources)\", \"[https://developer.mozilla.org/en-US/docs/Web/HTTP/Status]\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"When working with HTTP to build a server, I can't ignore status codes. These code are used in RESTful APIs to indicate the status of aâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/http-status-code","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}