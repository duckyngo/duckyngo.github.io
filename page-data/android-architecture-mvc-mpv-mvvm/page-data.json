{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/android-architecture-mvc-mpv-mvvm",
    "result": {"data":{"post":{"slug":"/android-architecture-mvc-mpv-mvvm","title":"Android Architecture: MVC, MVP and MVVM","date":"22.01.2022","tags":[{"name":"Android","slug":"android"},{"name":"Mobile","slug":"mobile"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"android-architecture-mvc-mpv-mvvm\",\n  \"title\": \"Android Architecture: MVC, MVP and MVVM\",\n  \"date\": \"2022-01-22T00:00:00.000Z\",\n  \"tags\": [\"Android\", \"Mobile\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Android Architecture: MVC, MVP and MVVM\"), mdx(\"h3\", null, \"Android architecture l\\xE0 g\\xEC?\"), mdx(\"p\", null, \"Android Architecture l\\xE0 c\\xE1ch ch\\xFAng ta s\\u1EAFp x\\u1EBFp, c\\u1EA5u tr\\xFAc m\\u1ED9t d\\u1EF1 \\xE1n Android gi\\xFAp cho vi\\u1EC7c scale v\\xE0 maintain tr\\u1EDF n\\xEAn d\\u1EC5 d\\xE0ng h\\u01A1n. L\\u1EADp tr\\xECnh vi\\xEAn th\\u01B0\\u1EDDng s\\u1EED d\\u1EE5ng \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nhi\\u1EC1u th\\u1EDDi gian \\u0111\\u1EC3 maintain h\\u01A1n l\\xE0 x\\xE2y d\\u1EF1ng d\\u1EF1 \\xE1n\"), \". Do \\u0111\\xF3, vi\\u1EC7c \\xE1p d\\u1EE5ng m\\u1ED9t Architecture Pattern \\u0111\\xFAng \\u0111\\u1EAFn r\\u1EA5t c\\xF3 \\xFD ngh\\u0129a v\\xE0 h\\u1EEFu \\xEDch sau n\\xE0y.\"), mdx(\"h3\", null, \"Kh\\xE1c bi\\u1EC7t gi\\u1EEFa MVC v\\u1EDBi MVVM?\"), mdx(\"p\", null, \"Trong Android, MVC \\u0111\\u01B0\\u1EE3c coi nh\\u01B0 m\\u1ED9t design pattern m\\u1EB7c \\u0111\\u1ECBnh. Trong \\u0111\\xF3, Activity \\u0111\\u01B0\\u1EE3c coi nh\\u01B0 m\\u1ED9t Controller (C) v\\xE0 XML files l\\xE0 View (V). Ng\\u01B0\\u1EE3c l\\u1EA1i MVVM gom h\\u1EBFt Activity v\\xE0 XML th\\xE0nh View v\\xE0 th\\xEAm m\\u1ED9t th\\xE0nh ph\\u1EA7n m\\u1EDBi g\\u1ECDi l\\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ViewModel ch\\u1ECBu tr\\xE1ch nhi\\u1EC7m qu\\u1EA3n l\\xFD business logic\"), \". \\u0110i\\u1EC1u n\\xE0y gi\\xFAp ph\\xE2n t\\xE1ch l\\u1EDBp UI v\\xE0 logic m\\u1ED9t c\\xE1ch r\\xF5 r\\xE0ng.\"), mdx(\"h3\", null, \"S\\u1EF1 kh\\xE1c bi\\u1EC7t gi\\u1EEFa MVP v\\u1EDBi MVVM?\"), mdx(\"p\", null, \"Trong MVP, Presenter v\\xE0 View bi\\u1EBFt v\\u1EC1 s\\u1EF1 t\\u1ED3n t\\u1EA1i c\\u1EE7a l\\u1EABn nhau. Ch\\xFAng t\\u01B0\\u01A1ng t\\xE1c v\\u1EDBi nhau th\\xF4ng qua m\\u1ED9t interface. Trong MVVM, ch\\u1EC9 View bi\\u1EBFt v\\u1EC1 s\\u1EF1 t\\u1ED3n t\\u1EA1i c\\u1EE7a View-Model. Ng\\u01B0\\u1EE3c l\\u1EA1i, View-Model kh\\xF4ng h\\u1EC1 bi\\u1EBFt g\\xEC v\\u1EC1 s\\u1EF1 t\\u1ED3n t\\u1EA1i c\\u1EE7a View.\"), mdx(\"h3\", null, \"\\u0110\\xE2u l\\xE0 y\\u1EBFu t\\u1ED1 quan tr\\u1ECDng nh\\u1EA5t trong Android Architecture?\"), mdx(\"p\", null, \"\\u0110\\u1EA7u ti\\xEAn l\\xE0 s\\u1EF1 ph\\xE2n chia m\\u1ED1i quan t\\xE2m (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"separation of concerns\"), \"), nh\\u01B0 business logic, UI v\\xE0 data model n\\xEAn \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\xE1ch ri\\xEAng bi\\u1EC7t nhau. Ti\\u1EBFp theo l\\xE0 s\\u1EF1 t\\xE1ch r\\u1EDDi, kh\\xF4ng r\\xE0ng bu\\u1ED9c (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"decoupling\"), \") c\\u1EE7a code: M\\u1ED7i \\u0111o\\u1EA1n code n\\xEAn ho\\u1EA1t \\u0111\\u1ED9ng nh\\u01B0 m\\u1ED9t black box do \\u0111\\xF3 vi\\u1EC7c thay \\u0111\\u1ED5i \\u0111o\\u1EA1n code \\u1EDF m\\u1ED9t class s\\u1EBD kh\\xF4ng \\u1EA3nh h\\u01B0\\u1EDFng nh\\u1EEFng ph\\u1EA7n kh\\xE1c c\\u1EE7a codebase.\"), mdx(\"h3\", null, \"Clean Architecture l\\xE0 g\\xEC?\"), mdx(\"p\", null, \"Thu\\u1EADt ng\\u1EEF \\u201CClean Architecture\\u201D \\u0111\\u01B0\\u1EE3c gi\\u1EDBi thi\\u1EC7u b\\u1EDFi Robert C.Martin v\\xE0 \\xF4ng c\\xF3 xu\\u1EA5t b\\u1EA3n 1 cu\\u1ED1n s\\xE1ch v\\u1EC1 n\\xF3. \\xDD t\\u01B0\\u1EDFng ch\\xEDnh c\\u1EE7a Clean Architecture l\\xE0 n\\xF3 t\\xE1ch r\\u1EDDi s\\u1EF1 t\\u01B0\\u01A1ng t\\xE1c c\\u1EE7a chung ta v\\u1EDBi data th\\xE0nh nh\\u1EEFng th\\u1EF1c th\\u1EC3 nh\\u1ECF h\\u01A1n \\u0111\\u01B0\\u1EE3c g\\u1ECDi l\\xE0 \\u201C\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"use cases\"), \"\\u201D. N\\xF3 l\\xE0 c\\xE1ch t\\u1ED1t nh\\u1EA5t \\u0111\\u1EC3 vi\\u1EBFt m\\u1ED9t \\u0111o\\u1EA1n code kh\\xF4ng b\\u1ECB r\\xE0ng bu\\u1ED9c (decoupled code).\"), mdx(\"h3\", null, \"Android Repositories l\\xE0 g\\xEC?\"), mdx(\"p\", null, \"H\\u1EA7u h\\u1EBFt m\\u1ECDi \\u1EE9ng d\\u1EE5ng \\u0111\\u1EC1u l\\u01B0u tr\\u1EEF v\\xE0 truy v\\u1EA5n data t\\u1EEB m\\u1ED9t local storage ho\\u1EB7c t\\u1EEB remote server. Android repository s\\u1EBD quy\\u1EBFt \\u0111\\u1ECBnh vi\\u1EC7c s\\u1EED d\\u1EE5ng d\\u1EEF li\\u1EC7u \\u0111\\u01B0\\u1EE3c l\\u01B0u \\u1EDF local hay remote server. N\\xF3 gi\\xFAp b\\xF3c \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"t\\xE1ch logic \\u1EDF storage v\\u1EDBi nh\\u1EEFng class b\\xEAn ngo\\xE0i\"), \".\"), mdx(\"p\", null, \"References:\"), mdx(\"p\", null, \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.toptal.com/android/android-apps-mvvm-with-clean-architecture\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Better Android Apps Using MVVM with Clean Architecture\")), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Android Architecture: MVC, MVP and MVVM Android architecture là gì? Android Architecture là cách chúng ta sắp xếp, cấu trúc một dự án…","timeToRead":2,"banner":null}},"pageContext":{"slug":"/android-architecture-mvc-mpv-mvvm","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}