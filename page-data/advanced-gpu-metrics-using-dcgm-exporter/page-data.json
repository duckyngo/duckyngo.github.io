{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/advanced-gpu-metrics-using-dcgm-exporter",
    "result": {"data":{"post":{"slug":"/advanced-gpu-metrics-using-dcgm-exporter","title":"Techinal Notes: Monitoring Advanced GPU Metrics Using DCGM Exporter","date":"10.10.2024","tags":[{"name":"AI","slug":"ai"},{"name":"MLOps","slug":"ml-ops"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"advanced-gpu-metrics-using-dcgm-exporter\",\n  \"title\": \"Techinal Notes: Monitoring Advanced GPU Metrics Using DCGM Exporter\",\n  \"date\": \"2024-10-10T00:00:00.000Z\",\n  \"tags\": [\"AI\", \"MLOps\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"When working with GPU-intensive applications like machine learning, it's critical to monitor GPU metrics to ensure performance and resource optimization. NVIDIA\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dcgm-exporter\"), \" offers a robust solution for GPU monitoring. However, its default configuration provides only basic metrics, such as GPU utilization and memory usage, which are insufficient for monitoring advanced features like \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tensor Core activity\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CUDA Core activity\"), \".\"), mdx(\"p\", null, \"In this guide, I'll walk you through configuring \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dcgm-exporter\"), \" to enable advanced profiling metrics, including \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tensor Core activity\"), \", using Docker Compose and Prometheus.\"), mdx(\"h2\", null, \"Problem with Default Metrics\"), mdx(\"p\", null, \"By default, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dcgm-exporter\"), \" uses a file (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default-counters.csv\"), \") that includes basic metrics like:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Clocks:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SM_CLOCK\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MEM_CLOCK\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Temperature:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GPU_TEMP\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MEMORY_TEMP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Power Usage:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POWER_USAGE\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TOTAL_ENERGY_CONSUMPTION\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Utilization:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GPU_UTIL\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MEM_COPY_UTIL\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ENC_UTIL\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DEC_UTIL\"))), mdx(\"p\", null, \"These metrics are sufficient for basic GPU monitoring but lack deeper insights into Tensor Core and CUDA Core activity. Profiling metrics like \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tensor Core cycles\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SM (CUDA Core) active percentage\"), \" are not included.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Solution: Enable Profiling Metrics in DCGM Exporter\"), mdx(\"p\", null, \"To unlock advanced metrics, such as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"PIPE_TENSOR_ACTIVE\")), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"SM_ACTIVE\")), \", you need to:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enable profiling collectors in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dcgm-exporter\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Provide a custom metrics configuration file that includes these advanced metrics.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Steps to Monitor Tensor Core and CUDA Core Activity\"), mdx(\"h3\", null, \"Step 1: Download and Modify the Metrics File\"), mdx(\"p\", null, \"Download the example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dcp-metrics-included.csv\"), \" file from the official NVIDIA GitHub repository:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"wget https://raw.githubusercontent.com/NVIDIA/dcgm-exporter/main/etc/dcp-metrics-included.csv\\n\")), mdx(\"p\", null, \"Modify the file to include only the metrics you need or to fix formatting issues:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add a trailing comma to comments\"), \" (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"# comment,,\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Remove unsupported labels\"), \", such as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DCGM_FI_DRIVER_VERSION\"), \".\")), mdx(\"p\", null, \"For Tensor Core and CUDA Core activity, ensure these metrics are included:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csv\"\n  }, \"# Tensor Core and CUDA Core Activity,,\\nDCGM_FI_PROF_PIPE_TENSOR_ACTIVE, gauge, Ratio of cycles the tensor (HMMA) pipe is active.\\nDCGM_FI_PROF_SM_ACTIVE, gauge, Ratio of time the Streaming Multiprocessor is active.\\nDCGM_FI_PROF_DRAM_ACTIVE, gauge, Ratio of cycles the memory interface is active sending/receiving data.\\n\")), mdx(\"p\", null, \"Save the file to a local path, e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/home/user/dcp-metrics-included.csv\"), \".\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Step 2: Update Docker Compose Configuration\"), mdx(\"p\", null, \"Here\\u2019s the final \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose.yml\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dcgm-exporter\"), \" with profiling enabled:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"version: '3.8'\\n\\nservices:\\n  nvidia-dcgm-exporter:\\n    image: nvidia/dcgm-exporter:latest\\n    deploy:\\n      resources:\\n        reservations:\\n          devices:\\n            - capabilities: [gpu]\\n    environment:\\n      - NVIDIA_VISIBLE_DEVICES=all\\n      - DCGM_EXPORTER_COLLECTORS=/workspace/dcp-metrics-included.csv\\n    ports:\\n      - \\\"9400:9400\\\"  # Prometheus scraping port\\n    cap_add:\\n      - SYS_ADMIN  # Required for profiling metrics\\n    volumes:\\n      - /home/user/dcp-metrics-included.csv:/workspace/dcp-metrics-included.csv\\n    networks:\\n      - monitoring\\n\\nnetworks:\\n  monitoring:\\n    driver: bridge\\n\")), mdx(\"h3\", null, \"Explanation:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"DCGM_EXPORTER_COLLECTORS\")), \": Points to the custom metrics file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"SYS_ADMIN\"), \" capability\"), \": Required for profiling features.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Volume mounting\"), \": Ensures the container can access the custom metrics file.\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Step 3: Verify the Metrics\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Start the container:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"docker-compose up -d nvidia-dcgm-exporter\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Access the metrics endpoint:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"curl http://<your-server-ip>:9400/metrics\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Look for profiling metrics like:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DCGM_FI_PROF_PIPE_TENSOR_ACTIVE\"), \": Tensor Core activity.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DCGM_FI_PROF_SM_ACTIVE\"), \": CUDA Core activity.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DCGM_FI_PROF_DRAM_ACTIVE\"), \": Memory interface activity.\")))), mdx(\"hr\", null), mdx(\"h2\", null, \"Example Output\"), mdx(\"p\", null, \"Here\\u2019s a sample output for advanced GPU metrics:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# HELP DCGM_FI_PROF_PIPE_TENSOR_ACTIVE Ratio of cycles the tensor (HMMA) pipe is active.\\n# TYPE DCGM_FI_PROF_PIPE_TENSOR_ACTIVE gauge\\nDCGM_FI_PROF_PIPE_TENSOR_ACTIVE{gpu=\\\"0\\\",UUID=\\\"GPU-abc123\\\",device=\\\"nvidia0\\\"} 0.012345\\n\\n# HELP DCGM_FI_PROF_SM_ACTIVE Ratio of time the Streaming Multiprocessor is active.\\n# TYPE DCGM_FI_PROF_SM_ACTIVE gauge\\nDCGM_FI_PROF_SM_ACTIVE{gpu=\\\"0\\\",UUID=\\\"GPU-abc123\\\",device=\\\"nvidia0\\\"} 0.234567\\n\\n# HELP DCGM_FI_PROF_DRAM_ACTIVE Ratio of cycles the memory interface is active.\\n# TYPE DCGM_FI_PROF_DRAM_ACTIVE gauge\\nDCGM_FI_PROF_DRAM_ACTIVE{gpu=\\\"0\\\",UUID=\\\"GPU-abc123\\\",device=\\\"nvidia0\\\"} 0.045678\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Step 4: Visualize in Grafana\"), mdx(\"p\", null, \"To monitor the metrics:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add Prometheus as a Data Source\"), \" in Grafana.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a new dashboard and add panels with PromQL queries:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Tensor Core Activity\"), \":\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-promql\"\n  }, \"DCGM_FI_PROF_PIPE_TENSOR_ACTIVE\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"CUDA Core Activity\"), \":\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-promql\"\n  }, \"DCGM_FI_PROF_SM_ACTIVE\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Memory Interface Activity\"), \":\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-promql\"\n  }, \"DCGM_FI_PROF_DRAM_ACTIVE\\n\")))))), mdx(\"hr\", null), mdx(\"h2\", null, \"Lessons Learned\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"CSV Formatting\"), \": Ensure comments end with commas, and unsupported fields are removed.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Profiling Permissions\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SYS_ADMIN\"), \" capability is mandatory for advanced metrics.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Customization\"), \": Use a custom metrics file for fine-grained control over exported data.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Conclusion\"), mdx(\"p\", null, \"With these steps, you can monitor advanced GPU metrics, including Tensor Core and CUDA Core activity. This setup provides a comprehensive view of GPU performance, essential for optimizing machine learning workloads and other GPU-intensive applications\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Overview When working with GPU-intensive applications like machine learning, it's critical to monitor GPU metrics to ensure performance and…","timeToRead":2,"banner":null}},"pageContext":{"slug":"/advanced-gpu-metrics-using-dcgm-exporter","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}